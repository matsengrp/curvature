We again thank Reviewer 2 for their remarkably detailed suggestions; these have greatly improved the paper.


Anonymous comments from Referee #2:

Page 12, line 23 [page 12, line 25]:
I would still suggest adding the word bits to make it clearer, because the Big-O notation is also used with the unit 'words'.
* We revised the sentence to say "... using O(n) space (in bits).".

Page 12, line 52-55 [page 12, line 57]:
The correction is fine, but in the new last sentence on page 12, 'four' should probably be 'for'.
* Corrected.

Page 16, lines 45-46 [page 16, lines 43-46]:
The added explanation is helpful. However, I am not sure whether it is obvious enough that the "access times distributions do not change substantially" through the exclusions. Maybe this also requires some proof and a more precise statement of the effect (compared to just saying "substantial").
* We apologize for the misunderstanding. This figure is simply meant to visually demonstrate the effect of curvature on access times when all other variables are held constant. The excluded pairs have much smaller access times than those shown but which are not substantially different (visually) from those of the trees from which they can be obtained via replacement. We were not claiming that the excluded trees have the same access times as the included trees, and, as such there is nothing to prove here. As the replaced trees have a smaller number of leaves (and therefore much smaller access times) the effect is a messy plot with multiple curves that essentially includes the results of trees with 3 to say 7 leaves (for (b)). Each individual curve shows a similar influence from curvature.
* We revised these sentences to say: "To limit clutter, these plots exclude the pairs that result from modifying pairs of trees with a smaller number of leaves by replacing a given leaf with a given subtree (e.g\ we exclude pairs of trees that both contain leaves 1 and 2 as siblings). The additional curves induced by the excluded pairs show a similar influence from curvature."

Page 20, Lemma 5.5, point 1 [page 20, Lemma 5.5]:
Unfortunately, the revised sentence introducing the cases is not much more helpful than its predecessor (for me). The main source of confusion is this: "we do not need to exclude the target branch from k and a, gaining an additional leaf to balance the product ka at the cost of increasing j" (from the case where the subtree is moved to the root). Probably I am missing a point somewhere, but I cannot make much sense of this sentence. Exclude the target branch from k and a? Gaining an additional leaf - where / how?
* We apologize for the confusion, which was likely caused by our incorrect definition of a and b in Lemma 5.3. In the special case that R is moved to an ancestor, the newly introduced node becomes L in the new tree S. Thus, the node "L" of T should also be part of the path that defines a, because moves of the subtree rooted at "L" can now be attached to R. In the case described in Lemma 5.5 we thus increase the length of a by 1 when we move R to the root. We originally defined (a - b) in terms of the height change experienced by R but felt the path-based definition was more intuitive and thereby made this error. Thus, this does not change any of our results.
* We have revised the statement and proof of Lemma 5.3, introducing separate least common ancestors L_1 in T and L_2 in S, defining a using the path from U to L_2, and defining b using the path from V to L_1.
* We have revised the proof of Lemma 5.5 to state:

"Recall that k is the number of leaves in the moved subtree R, i is the number of leaves in R's neighbor U and j is the number of leaves in R's new neighbor V after the SPR move. The length of the path from U's root to the least common ancestor L_2 of U and V in S is a, while b is the length of the path from V's root to the least common ancestor L_1 of U and V in T. Call the former path A.

The degree change is maximized by making L_1 the root of T and thereby minimizing b, namely setting b = 0. The resulting equation 2(ka + i − j) is similarly maximized by including only one leaf in V, setting i = 1. We then maximally balance the terms in the product ka by adding as many leaves as possible to either R or as children of the path A. Each new leaf of R increases k by 1 and each new child of A lengthens the path and increases a by 1.

There are two cases, depending on whether R is moved to the root (thereby introducing a new level to the tree) or not. If not, then the j leaves of the new neighbor subtree V cannot contribute to increasing k or a. We thus set j = 1 and split the remaining n − b − i − j = n − 2 leaves between R and A in as balanced a way as possible, maximizing the product ka and giving (i). Note that this corresponds to moving the bottom subtree of floor((n−2)/2) or ceiling((n-2)/2) leaves in a ladder tree to the root-most leaf of the tree.

If R is moved to the root, then the new neighbor subtree V is the entire tree excluding R itself. The root-most leaf of the tree is on the path from U to L_2 in S and thus a child of A, despite also being a child of L_1 in T . In this case, we have an additional leaf over the previous case that can be added to R or lengthen A, increasing the product ka at the cost of increasing j. This corresponds to moving the bottom subtree of floor(n/2)) or ceiling(n/2) leaves in a ladder tree to the root. ..."

Page 22, lines 30-32, point 2 [page 22, lines 49-50]:
I think that the last part of the sentence "with a possible difference of two moves for a tree where one of the root's children is small" does still not fit perfectly. T can still have two small children at the root node (resulting in the balanced tree with four leaves) and then there is a difference of four moves from the 'general' case (= no small root children). Maybe a wording along the lines "with a possible difference of two moves per small child of the root" covers (all) the different cases better.
* We adopted the suggested wording, thanks.

Page 22, lines 38-42, point 2 [page23, lines 10-11]:
The restriction to n > 3, however, does not remove the arithmetical error. '4n^2-8n-12 + (24-8n)' is still not '4n^2-16n+16' but '4n^2-16n+12'. So, you would probably need to add the term '(28-8n)' and say 'n>=4' at the end of the sentence to fix this.
* Corrected.

Page 22, lines 54-55 [page 23, lines 14-19]:
The added explanations makes it much clearer. However, is it 'fair' to change the 'ranking' (w.r.t. the average moved subtree size) of the trees by ignoring equivalent moves? And is it obvious that the ladder tree will be the tree with the highest average moved subtree size after ignoring equivalent moves? Or does this maybe need a proof?
* We again apologize for the misunderstanding. Our intention was not to change the ranking in such a manner, but in fact the opposite: we merely analyze the distribution of the subtree sizes according to our specific distribution. We show in the previous proof that the ladder tree has the smallest proportion of small subtrees *given our distribution* which implies that it has the highest average moved subtree size when ignoring equivalent moves in this way. We have made the following changes to make this more clear:
* In the paragraph before the lemma we now say (in reference to ignoring equivalent moves) "This occurs because multiple NNI moves may lead to the same tree, as described previously, and each equivalent move may involve a subtree with a different number of leaves. Our distribution includes only one of these equivalent moves."
* We revised the lemma to state: "Let T be a rooted tree with >= 4 leaves. Let N_i(T) be the neighbors of T induced by rSPR moves of an i-leaf subtree, where the moved subtree is defined according to our distribution of rSPR moves."
* In the proof of the lemma we now say "Recall from the proof of Lemma 5.7 that a ladder tree has the smallest proportion of small subtrees. This implies that a ladder tree has the greatest average moved subtree size (in terms of the number of leaves) with respect to our distribution."
* In the conclusion of the proof we now say "Thus, the average size of a moved subtree over all rSPR operations from our distribution on a given tree is at most the weighted average of ..."
* Following the proof we finally say "Further, note that our distribution does not necessarily minimize the moved subtree size among equivalent moves. It may be interesting in future work to improve our bound by explicitly minimizing the moved subtree size in such a manner."

Page 23, line 32 [page 24, line 9]:
While this occurrence is fixed, I would strongly suggest stating (in the proof of Theorem 6.1) that 'W_{1,n}' is the short form for the mass transport term when considering T_n and S_n (if I figure it now correctly, which took far too long).
* We now begin the proof with the sentence "Let W_{1,n} be the mass transport term with respect to T_n and S_n, that is W_1(m_{T_n}, m_{S_n}).".
